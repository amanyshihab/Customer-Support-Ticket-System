CREATE TABLE customers (
    customer_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    CONSTRAINT uk_customer_email UNIQUE (email)
);

CREATE TABLE agents (
    agent_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    CONSTRAINT uk_agent_email UNIQUE (email)
);

CREATE TABLE tickets (
    ticket_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER NOT NULL,
    assigned_agent_id NUMBER,
    description VARCHAR2(1000) NOT NULL,
    status VARCHAR2(20) DEFAULT 'Open' NOT NULL,
    priority VARCHAR2(10) DEFAULT 'Medium' NOT NULL,
    created_date DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT fk_ticket_customer FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    CONSTRAINT fk_ticket_agent FOREIGN KEY (assigned_agent_id) REFERENCES agents(agent_id),
    CONSTRAINT chk_ticket_status CHECK (status IN ('Open', 'In-Progress', 'Closed')),
    CONSTRAINT chk_ticket_priority CHECK (priority IN ('Low', 'Medium', 'High'))
);

CREATE TABLE ticket_comments (
    comment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ticket_id NUMBER NOT NULL,
    commenter_id NUMBER NOT NULL,
    comment_text VARCHAR2(1000) NOT NULL,
    comment_date DATE DEFAULT SYSDATE NOT NULL,
    commenter_type VARCHAR2(10) NOT NULL,
    CONSTRAINT fk_comment_ticket FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id),
    CONSTRAINT chk_commenter_type CHECK (commenter_type IN ('Customer', 'Agent'))
);
